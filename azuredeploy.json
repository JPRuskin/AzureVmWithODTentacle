{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "defaultValue": "AUSE2-FRGQA"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "ForgeQA"
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": ""
        },
        "autoShutdownTime": {
            "type": "string",
            "defaultValue": "19:00"
        },
        "autoShutdownNotificationEmail": {
            "type": "string",
            "defaultValue": "d4b9b74e.questionmark365.onmicrosoft.com@amer.teams.ms"
        },
        "OctopusDeployApiUrl": {
            "type": "string",
            "defaultValue": ""
        },
        "OctopusDeployApiKey": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "virtualMachineName": "[parameters('baseName')]",
        "virtualNetworkName": "[concat(parameters('baseName'), '-vnet')]",
        "networkInterfaceName": "[concat(parameters('baseName'), '-nic')]",
        "networkSecurityGroupName": "[concat(parameters('baseName'), '-nsg')]",
        "publicIpAddressName": "[concat(parameters('baseName'), '-ip')]",
        "vnetId": "[resourceId(parameters('baseName'),'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', 'default')]"
    },
    "resources": [
        {
            "name": "[variables('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2017-03-30",
                    "type": "extensions",
                    "name": "InstallOctopusDsc",
                    "location": "[resourceGroup().location]",
                    "condition": "[not(empty(parameters('OctopusDeployApiKey')))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]"
                    ],                    
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "https://raw.githubusercontent.com/JPRuskin/AzureVmWithODTentacle/master/Prereqs.ps1"
                            ],
                            "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File Prereqs.ps1"
                        },
                        "protectedSettings": {}
                    }
                },
                {
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "name": "InstallOctopusTentacle",
                    "location": "[resourceGroup().location]",
                    "condition": "[not(empty(parameters('OctopusDeployApiKey')))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
                        "InstallOctopusDsc"
                    ],
                    "properties": {
                        "publisher": "Microsoft.PowerShell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.75",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "configuration": {
                                "url": "https://github.com/JPRuskin/AzureVmWithODTentacle/blob/master/OctopusTentacle.ps1.zip?raw=true",
                                "script": "OctopusTentacle.ps1",
                                "function": "OctopusTentacle"
                            },
                            "configurationArguments": {
                                "OctopusTarget": "[parameters('OctopusDeployApiUrl')]",
                                "OctopusApiKey": "[parameters('OctopusDeployApiKey')]"
                            }
                        },
                        "protectedSettings": {}
                    }
                }
            ]
        },
        {
            "name": "[concat('shutdown-computevm-', variables('virtualMachineName'))]",
            "condition": "[not(empty(parameters('autoShutdownTime')))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[parameters('autoShutdownTime')]"
                },
                "timeZoneId": "UTC",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
                "notificationSettings": {
                    "status": "[if(empty(parameters('autoShutdownNotificationEmail')), 'Disabled', 'Enabled')]",
                    "emailRecipient": "[parameters('autoShutdownNotificationEmail')]",
                    "notificationLocale": "en",
                    "timeInMinutes": "30"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
            ]
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2017-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.3.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(parameters('baseName'), 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(parameters('baseName'), 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2017-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {}
}